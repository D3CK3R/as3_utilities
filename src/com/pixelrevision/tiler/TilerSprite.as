package com.pixelrevision.tiler {		import flash.events.Event;	import flash.events.EventDispatcher;		public class TilerSprite extends EventDispatcher{				protected var _x:Number;		protected var _y:Number;				public var flaggedForDrawing:Boolean;		public var flaggedForUpdates:Boolean;				public function TilerSprite(){			super();			_x = 0;			_y = 0;						flaggedForDrawing = false;			flaggedForUpdates = false;		}				/**		 * Adds the sprite to a Tiler instance.		 */		public function addToTiler(tiler:Tiler):void{			var event:TilerEvent = new TilerEvent("AddedToTiler");			event.info.target = this;			event.info.tiler = tiler;			dispatchEvent(event);			// watch for a quadrant change			tiler.addEventListener("QuadrantChanged", onQuadrantChange);		}				protected function onQuadrantChange(e:TilerEvent):void{			dispatchEvent( new Event("QuadrantChanged") );		}				/**		 * Removes the sprite from a Tiler instance.		 */		public function removeFromTiler(tiler:Tiler):void{			var event:TilerEvent = new TilerEvent("RemovedToTiler");			event.info.target = this;			event.info.tiler = tiler;			dispatchEvent(event);			// remove any quadrant changes			if(tiler.hasEventListener("QuadrantChanged")){				tiler.removeEventListener("QuadrantChanged", onQuadrantChange);			}		}						/**		 * Function to update all elements of this object.			 */			public function update():void{		}				/**		 * Function to draw this object onto a tiler instance.			 */		public function draw(tiler:Tiler):void{		}				/**		 * The x position		 */			public function set x(value:Number):void{			_x = value;		}		public function get x():Number{			return _x;		}				/**		 * The y position			 */			public function set y(value:Number):void{			_y = value;		}		public function get y():Number{			return _y;		}					}	}