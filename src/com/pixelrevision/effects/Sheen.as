package com.pixelrevision.effects {		import flash.display.Sprite;	import flash.display.Bitmap;	import flash.display.BitmapData;	import flash.display.DisplayObject;	import flash.display.GradientType;	import flash.events.Event;	import flash.geom.Matrix;	import flash.utils.getTimer;	import flash.filters.GlowFilter;		import fl.transitions.Tween;	import fl.motion.easing.Sine;		public class Sheen extends Sprite{				protected var _target:Sprite;		protected var _mask:Bitmap;		protected var _innerGradient:Sprite;		protected var _outerGlowClip:Sprite;		protected var _outerGlowBitmap:Bitmap;		protected var _glowMask:Sprite;		protected var _glowFilter:GlowFilter;		protected var _offsetX:Number;		protected var _offsetY:Number;				/**		 *	@constructor		 */		public function Sheen(sourceObject:Sprite){			super();			_target = sourceObject;			// draw the inner gradient			_innerGradient = new Sprite();			_innerGradient.cacheAsBitmap = true;			_innerGradient.mouseEnabled = false;			addChild(_innerGradient);						var tempData:BitmapData = new BitmapData(sourceObject.width, sourceObject.height, true, 0x000000);			_mask = new Bitmap(tempData);			_mask.cacheAsBitmap = true;			addChild(_mask);						x = sourceObject.x;			y = sourceObject.y;						mouseEnabled = false;						// now add it back into the clip at the topmost level			_innerGradient.mask = _mask;						_outerGlowClip = new Sprite();			_outerGlowClip.cacheAsBitmap = true;			_outerGlowClip.mouseEnabled = false;			addChild(_outerGlowClip);						var glowBitmap:BitmapData = new BitmapData(sourceObject.width, sourceObject.height, true, 0x000000);			_outerGlowBitmap = new Bitmap(glowBitmap);			_outerGlowClip.addChild(_outerGlowBitmap);						_glowMask = new Sprite();			_glowMask.cacheAsBitmap = true;			addChild(_glowMask);						_outerGlowClip.mask = _glowMask;		}						public function startRendering(howFast:Number = .5, color:Number = 0xFFFFFF, amount:Number = .5, gradientWidth=100, timeBetween = .25, offsetX:Number = 0, offsetY:Number = 0):void{			_offsetX = offsetX;			_offsetY = offsetY;						_glowFilter = new GlowFilter(color, 1, 10, 10, 2, 2, false, true);						_innerGradient.graphics.clear();			// beginGradientFill(type:String, colors:Array, alphas:Array, ratios:Array, matrix:Matrix = null, spreadMethod:String = "pad", interpolationMethod:String = "rgb", focalPointRatio:Number = 0):			_innerGradient.graphics.beginGradientFill(GradientType.LINEAR, [color, color, color], [0, amount, 0], [127.5, 191.25, 255]);			_innerGradient.graphics.drawRect(0, 0, gradientWidth, _target.height);			_innerGradient.graphics.endFill();			_innerGradient.x = -_innerGradient.width + offsetX;			_innerGradient.height += 40;			_innerGradient.rotation = -15;			_innerGradient.y = offsetY - 20;						if( !hasEventListener(Event.ENTER_FRAME) ){				addEventListener(Event.ENTER_FRAME, render);			}			var move:Tween = new Tween(_innerGradient, "x", Sine.easeOut, _innerGradient.x, _target.width, howFast, true); 						_glowMask.graphics.clear();			// beginGradientFill(type:String, colors:Array, alphas:Array, ratios:Array, matrix:Matrix = null, spreadMethod:String = "pad", interpolationMethod:String = "rgb", focalPointRatio:Number = 0):			_glowMask.graphics.beginGradientFill(GradientType.LINEAR, [color, color, color], [0, amount, 0], [127.5, 191.25, 255]);			_glowMask.graphics.drawRect(0, 0, gradientWidth, _target.height);			_glowMask.graphics.endFill();			_glowMask.y = - 10;			_glowMask.height = _target.height + 20;			_glowMask.x = -_glowMask.width + offsetX;									move = new Tween(_glowMask, "x", Sine.easeIn, _glowMask.x , _target.width + 10, howFast, true);		}				private function render(e:Event):void{			// make a drawing o the target to use as the mask			var maskBitmap:BitmapData = new BitmapData(_target.width, _target.height, true, 0x000000);			var offsetMatrix:Matrix = new Matrix();			offsetMatrix.tx = -_offsetX;			offsetMatrix.ty = -_offsetY;			maskBitmap.draw(_target, offsetMatrix);						_mask.bitmapData = maskBitmap;			_mask.x = _offsetX;			_mask.y = _offsetY;						var glowBitmap:BitmapData = new BitmapData(_target.width, _target.height, true, 0x000000);			glowBitmap.draw(_target, offsetMatrix);			_outerGlowBitmap.bitmapData = glowBitmap;			_outerGlowBitmap.filters = [_glowFilter];						if(_glowMask.x >= _target.width + 10){				if( hasEventListener(Event.ENTER_FRAME) ){					removeEventListener(Event.ENTER_FRAME, render);				}			}		}									}	}