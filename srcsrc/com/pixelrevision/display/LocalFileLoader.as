package com.pixelrevision.display{		import flash.display.Loader;	import flash.events.*;	import flash.net.FileFilter;	import flash.net.FileReference;		/**	 * @class	LocalFileLoader	 * @description	Loads local files.	 * @author	pixelrevision	 * @version	1	 */	public class LocalFileLoader extends Loader{				protected var fr:FileReference;				private static const FILE_TYPES:Array = [new FileFilter ("Image", "*.jpg;*.gif;*.png;*.swf;" )];				/**		 *	@constructor		 */		public function LocalFileLoader(){			super();		}				/**		 * Will browse for the file.  Requires a click event on the users part.		 */		public function loadFile():void{			fr = new FileReference();			fr.addEventListener(Event.SELECT, fileSelected);			fr.addEventListener(Event.CANCEL, fileSelectCancelled);			fr.browse(FILE_TYPES);					}				// when the file has been selected load it		protected function fileSelected(e:Event):void{			fr.removeEventListener(Event.SELECT, fileSelected);			fr.removeEventListener(Event.CANCEL, fileSelectCancelled);			fr.addEventListener(Event.COMPLETE, onFRLoadComplete);			fr.addEventListener(IOErrorEvent.IO_ERROR, onFRLoadError);			fr.load();		}				// when the file has been loaded generate the actionscript		protected function onFRLoadComplete(e:Event):void{			fr.removeEventListener(Event.COMPLETE, onFRLoadComplete);			fr.removeEventListener(IOErrorEvent.IO_ERROR, onFRLoadError);						contentLoaderInfo.addEventListener(Event.COMPLETE, onLoaderComplete);			loadBytes(fr.data);		}				// this will remove the file reference when the image has been loaded		protected function onLoaderComplete(e:Event):void{			contentLoaderInfo.removeEventListener(Event.COMPLETE, onLoaderComplete);			fr = null;		}				// fule cancelled do nothing		protected function fileSelectCancelled(e:Event):void{			fr.removeEventListener(Event.SELECT, fileSelected);			fr.removeEventListener(Event.CANCEL, fileSelectCancelled);			fr = null;		}				// there was an error loading		protected function onFRLoadError(e:IOErrorEvent):void{			fr.removeEventListener(Event.COMPLETE, onFRLoadComplete);			fr.removeEventListener(IOErrorEvent.IO_ERROR, onFRLoadError);			fr = null;			throw new Error("Error loading file");		}			}}